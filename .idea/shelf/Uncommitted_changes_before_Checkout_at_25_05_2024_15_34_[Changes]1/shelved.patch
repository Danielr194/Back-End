Index: src/main/java/API/nhyira/apivitalis/Service/TagService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.Service;\r\n\r\nimport API.nhyira.apivitalis.DTO.Tag.TagExibitionDto;\r\nimport API.nhyira.apivitalis.Entity.Tag;\r\nimport API.nhyira.apivitalis.Repository.TagRepository;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\n@Service\r\npublic class TagService {\r\n\r\n    @Autowired\r\n    private TagRepository tagRepository;\r\n\r\n    public List<TagExibitionDto> getAllTags() {\r\n        return tagRepository.findAll().stream()\r\n                .map(this::toDTO)\r\n                .collect(Collectors.toList());\r\n    }\r\n\r\n    public TagExibitionDto getTagById(Integer id) {\r\n        Tag tag = tagRepository.findById(id).orElseThrow();\r\n        return toDTO(tag);\r\n    }\r\n\r\n    private TagExibitionDto toDTO(Tag tag) {\r\n        return new TagExibitionDto(\r\n                tag.getIdTag(),\r\n                tag.getNome()\r\n        );\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/Service/TagService.java b/src/main/java/API/nhyira/apivitalis/Service/TagService.java
--- a/src/main/java/API/nhyira/apivitalis/Service/TagService.java	
+++ b/src/main/java/API/nhyira/apivitalis/Service/TagService.java	
@@ -1,7 +1,10 @@
 package API.nhyira.apivitalis.Service;
 
+import API.nhyira.apivitalis.DTO.Tag.TagCreateEditDto;
 import API.nhyira.apivitalis.DTO.Tag.TagExibitionDto;
 import API.nhyira.apivitalis.Entity.Tag;
+import API.nhyira.apivitalis.DTO.Tag.TagMapper;
+import API.nhyira.apivitalis.Exception.NaoEncontradoException;
 import API.nhyira.apivitalis.Repository.TagRepository;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
@@ -11,25 +14,41 @@
 
 @Service
 public class TagService {
-
     @Autowired
     private TagRepository tagRepository;
 
+    private TagMapper tagMapper;
+
     public List<TagExibitionDto> getAllTags() {
-        return tagRepository.findAll().stream()
-                .map(this::toDTO)
+        List<Tag> tags = tagRepository.findAll();
+        return tags.stream()
+                .map(tagMapper::toDTO)
                 .collect(Collectors.toList());
     }
 
     public TagExibitionDto getTagById(Integer id) {
-        Tag tag = tagRepository.findById(id).orElseThrow();
-        return toDTO(tag);
+        Tag tag = tagRepository.findById(id)
+                .orElseThrow(() -> new RuntimeException("Tag não encontrada com o id: " + id));
+        return tagMapper.toDTO(tag);
+    }
+
+    public TagExibitionDto createTag(TagCreateEditDto tagCreateEditDTO) {
+        Tag tag = tagMapper.toEntity(tagCreateEditDTO);
+        Tag savedTag = tagRepository.save(tag);
+        return tagMapper.toDTO(savedTag);
+    }
+
+    public TagExibitionDto updateTag(Integer id, TagCreateEditDto tagCreateEditDTO) {
+        Tag existingTag = tagRepository.findById(id)
+                .orElseThrow(() -> new RuntimeException("Tag não encontrada com o id: " + id));
+        existingTag.setNome(tagCreateEditDTO.getNome());
+        Tag updatedTag = tagRepository.save(existingTag);
+        return tagMapper.toDTO(updatedTag);
     }
 
-    private TagExibitionDto toDTO(Tag tag) {
-        return new TagExibitionDto(
-                tag.getIdTag(),
-                tag.getNome()
-        );
+    public void deleteTag(Integer id) {
+        Tag tag = tagRepository.findById(id)
+                .orElseThrow(() -> new RuntimeException("Tag não encontrada com o id: " + id));
+        tagRepository.delete(tag);
     }
 }
\ No newline at end of file
Index: src/main/java/API/nhyira/apivitalis/Service/ExercicioService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.Service;\r\n\r\nimport API.nhyira.apivitalis.DTO.Exercicio.ExercicioCreateEditDto;\r\nimport API.nhyira.apivitalis.DTO.Exercicio.ExercicioExibitionDto;\r\nimport API.nhyira.apivitalis.DTO.Exercicio.ExercicioExibitionDto;\r\nimport API.nhyira.apivitalis.DTO.Exercicio.ExercicioMapper;\r\nimport API.nhyira.apivitalis.Entity.Exercicio;\r\nimport API.nhyira.apivitalis.Repository.ExercicioRepository;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport com.cloudinary.Cloudinary;\r\nimport com.cloudinary.utils.ObjectUtils;\r\nimport org.springframework.web.multipart.MultipartFile;\r\nimport java.io.IOException;\r\nimport java.util.Map;\r\n\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\n@Service\r\npublic class ExercicioService {\r\n\r\n    @Autowired\r\n    private ExercicioRepository exercicioRepository;\r\n\r\n    @Autowired\r\n    private ExercicioMapper exercicioMapper;\r\n\r\n\r\n    private Cloudinary cloudinary = new Cloudinary(ObjectUtils.asMap(\r\n            \"cloud_name\", \"Vitalis\",\r\n            \"api_key\", \"679425973318895\",\r\n            \"api_secret\", \"R-uaJBcdZUfUGu5TuYmiHodqBl4\"));\r\n\r\n    public String uploadImage(MultipartFile file) {\r\n        try {\r\n            Map uploadResult = cloudinary.uploader().upload(file.getBytes(), ObjectUtils.emptyMap());\r\n            return (String) uploadResult.get(\"url\");\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    public String uploadVideo(MultipartFile file) {\r\n        try {\r\n            Map uploadResult = cloudinary.uploader().upload(file.getBytes(), ObjectUtils.asMap(\"resource_type\", \"video\"));\r\n            return (String) uploadResult.get(\"url\");\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n\r\n    public List<ExercicioExibitionDto> getAllExercicios() {\r\n        return exercicioRepository.findAll().stream()\r\n                .map(exercicioMapper::toDTO)\r\n                .collect(Collectors.toList());\r\n    }\r\n\r\n    public ExercicioExibitionDto getExercicioById(Integer id) {\r\n        Exercicio exercicio = exercicioRepository.findById(id).orElseThrow();\r\n        return exercicioMapper.toDTO(exercicio);\r\n    }\r\n\r\n    public ExercicioExibitionDto createExercicio(ExercicioCreateEditDto exercicioDTO) {\r\n        Exercicio exercicio = exercicioMapper.toEntity(exercicioDTO);\r\n        exercicio = exercicioRepository.save(exercicio);\r\n        return exercicioMapper.toDTO(exercicio);\r\n    }\r\n\r\n    public ExercicioExibitionDto updateExercicio(Integer id, ExercicioCreateEditDto exercicioDTO) {\r\n        Exercicio exercicio = exercicioRepository.findById(id).orElseThrow();\r\n        exercicio.setMidiaUrl(exercicioDTO.getMidiaUrl());\r\n        exercicio.setNome(exercicioDTO.getNome());\r\n        exercicio.setDescricao(exercicioDTO.getDescricao());\r\n        exercicio = exercicioRepository.save(exercicio);\r\n        return exercicioMapper.toDTO(exercicio);\r\n    }\r\n\r\n    public void deleteExercicio(Integer id) {\r\n        exercicioRepository.deleteById(id);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/Service/ExercicioService.java b/src/main/java/API/nhyira/apivitalis/Service/ExercicioService.java
--- a/src/main/java/API/nhyira/apivitalis/Service/ExercicioService.java	
+++ b/src/main/java/API/nhyira/apivitalis/Service/ExercicioService.java	
@@ -5,6 +5,8 @@
 import API.nhyira.apivitalis.DTO.Exercicio.ExercicioExibitionDto;
 import API.nhyira.apivitalis.DTO.Exercicio.ExercicioMapper;
 import API.nhyira.apivitalis.Entity.Exercicio;
+import API.nhyira.apivitalis.Entity.Midia;
+import API.nhyira.apivitalis.Exception.NaoEncontradoException;
 import API.nhyira.apivitalis.Repository.ExercicioRepository;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
@@ -15,6 +17,7 @@
 import java.util.Map;
 
 import java.util.List;
+import java.util.Optional;
 import java.util.stream.Collectors;
 
 @Service
@@ -26,6 +29,9 @@
     @Autowired
     private ExercicioMapper exercicioMapper;
 
+    @Autowired
+    private MidiaService midiaService;
+
 
     private Cloudinary cloudinary = new Cloudinary(ObjectUtils.asMap(
             "cloud_name", "Vitalis",
@@ -61,23 +67,4 @@
         Exercicio exercicio = exercicioRepository.findById(id).orElseThrow();
         return exercicioMapper.toDTO(exercicio);
     }
-
-    public ExercicioExibitionDto createExercicio(ExercicioCreateEditDto exercicioDTO) {
-        Exercicio exercicio = exercicioMapper.toEntity(exercicioDTO);
-        exercicio = exercicioRepository.save(exercicio);
-        return exercicioMapper.toDTO(exercicio);
-    }
-
-    public ExercicioExibitionDto updateExercicio(Integer id, ExercicioCreateEditDto exercicioDTO) {
-        Exercicio exercicio = exercicioRepository.findById(id).orElseThrow();
-        exercicio.setMidiaUrl(exercicioDTO.getMidiaUrl());
-        exercicio.setNome(exercicioDTO.getNome());
-        exercicio.setDescricao(exercicioDTO.getDescricao());
-        exercicio = exercicioRepository.save(exercicio);
-        return exercicioMapper.toDTO(exercicio);
-    }
-
-    public void deleteExercicio(Integer id) {
-        exercicioRepository.deleteById(id);
-    }
 }
\ No newline at end of file
Index: src/main/java/API/nhyira/apivitalis/DTO/Exercicio/ExercicioExibitionDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.DTO.Exercicio;\r\n\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Getter;\r\nimport lombok.NoArgsConstructor;\r\nimport lombok.Setter;\r\n\r\n@Getter\r\n@Setter\r\n@NoArgsConstructor\r\n@AllArgsConstructor\r\npublic class ExercicioExibitionDto {\r\n    private Integer idTreino;\r\n    private String midiaUrl;\r\n    private String nome;\r\n    private String descricao;\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/DTO/Exercicio/ExercicioExibitionDto.java b/src/main/java/API/nhyira/apivitalis/DTO/Exercicio/ExercicioExibitionDto.java
--- a/src/main/java/API/nhyira/apivitalis/DTO/Exercicio/ExercicioExibitionDto.java	
+++ b/src/main/java/API/nhyira/apivitalis/DTO/Exercicio/ExercicioExibitionDto.java	
@@ -11,9 +11,12 @@
 @NoArgsConstructor
 @AllArgsConstructor
 public class ExercicioExibitionDto {
-    private Integer idTreino;
-    private String midiaUrl;
+
+    private Integer idExercicio;
     private String nome;
     private String descricao;
+    private String midiaNome;     // Nome da midia
+    private String midiaCaminho;  // Caminho da midia
+    private String midiaExtensao; // Extensão da midia
 
 }
Index: src/main/java/API/nhyira/apivitalis/DTO/Exercicio/ExercicioCreateEditDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.DTO.Exercicio;\r\n\r\nimport jakarta.validation.constraints.NotNull;\r\nimport jakarta.validation.constraints.Size;\r\nimport lombok.*;\r\n\r\n@Getter\r\n@Setter\r\n@NoArgsConstructor\r\n@AllArgsConstructor\r\npublic class  ExercicioCreateEditDto {\r\n\r\n    @NotNull\r\n    private Integer idTreino;\r\n\r\n    @NotNull\r\n    @Size(max = 255)\r\n    private String midiaUrl;\r\n\r\n    @NotNull\r\n    @Size(max = 100)\r\n    private String nome;\r\n\r\n    @NotNull\r\n    @Size(max = 500)\r\n    private String descricao;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/DTO/Exercicio/ExercicioCreateEditDto.java b/src/main/java/API/nhyira/apivitalis/DTO/Exercicio/ExercicioCreateEditDto.java
--- a/src/main/java/API/nhyira/apivitalis/DTO/Exercicio/ExercicioCreateEditDto.java	
+++ b/src/main/java/API/nhyira/apivitalis/DTO/Exercicio/ExercicioCreateEditDto.java	
@@ -10,12 +10,9 @@
 @AllArgsConstructor
 public class  ExercicioCreateEditDto {
 
-    @NotNull
-    private Integer idTreino;
-
     @NotNull
     @Size(max = 255)
-    private String midiaUrl;
+    private Integer midiaid;
 
     @NotNull
     @Size(max = 100)
Index: src/main/java/API/nhyira/apivitalis/DTO/Exercicio/ExercicioMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.DTO.Exercicio;\r\n\r\nimport API.nhyira.apivitalis.Entity.Exercicio;\r\nimport org.springframework.stereotype.Component;\r\n\r\n@Component\r\npublic class ExercicioMapper {\r\n\r\n    public Exercicio toEntity(ExercicioCreateEditDto dto) {\r\n        Exercicio exercicio = new Exercicio();\r\n        exercicio.setMidiaUrl(dto.getMidiaUrl());\r\n        exercicio.setNome(dto.getNome());\r\n        exercicio.setDescricao(dto.getDescricao());\r\n        return exercicio;\r\n    }\r\n\r\n    public ExercicioExibitionDto toDTO(Exercicio exercicio) {\r\n        return new ExercicioExibitionDto(\r\n                exercicio.getIdExercicio(),\r\n                exercicio.getMidiaUrl(),\r\n                exercicio.getNome(),\r\n                exercicio.getDescricao()\r\n        );\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/DTO/Exercicio/ExercicioMapper.java b/src/main/java/API/nhyira/apivitalis/DTO/Exercicio/ExercicioMapper.java
--- a/src/main/java/API/nhyira/apivitalis/DTO/Exercicio/ExercicioMapper.java	
+++ b/src/main/java/API/nhyira/apivitalis/DTO/Exercicio/ExercicioMapper.java	
@@ -1,25 +1,41 @@
 package API.nhyira.apivitalis.DTO.Exercicio;
 
 import API.nhyira.apivitalis.Entity.Exercicio;
+import API.nhyira.apivitalis.Entity.Midia;
+import API.nhyira.apivitalis.Service.MidiaService;
+import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
 @Component
 public class ExercicioMapper {
 
-    public Exercicio toEntity(ExercicioCreateEditDto dto) {
+
+    @Autowired
+    private MidiaService midiaService;
+
+    public ExercicioExibitionDto toDTO(Exercicio exercicio) {
+        ExercicioExibitionDto dto = new ExercicioExibitionDto();
+        dto.setIdExercicio(exercicio.getIdExercicio());
+        dto.setNome(exercicio.getNome());
+        dto.setDescricao(exercicio.getDescricao());
+
+        Midia midia = exercicio.getMidia();
+        dto.setMidiaNome(midia.getNome());
+        dto.setMidiaCaminho(midia.getCaminho());
+        dto.setMidiaExtensao(midia.getExtensao());
+
+        return dto;
+    }
+
+    public Exercicio toEntity(ExercicioCreateEditDto exercicioDTO) {
         Exercicio exercicio = new Exercicio();
-        exercicio.setMidiaUrl(dto.getMidiaUrl());
-        exercicio.setNome(dto.getNome());
-        exercicio.setDescricao(dto.getDescricao());
+        exercicio.setNome(exercicioDTO.getNome());
+        exercicio.setDescricao(exercicioDTO.getDescricao());
+
+        Midia midia = midiaService.findById(exercicioDTO.getMidiaid())
+                .orElseThrow(() -> new RuntimeException("Midia não encontrada com o id: " + exercicioDTO.getMidiaid()));
+        exercicio.setMidia(midia);
+
         return exercicio;
     }
-
-    public ExercicioExibitionDto toDTO(Exercicio exercicio) {
-        return new ExercicioExibitionDto(
-                exercicio.getIdExercicio(),
-                exercicio.getMidiaUrl(),
-                exercicio.getNome(),
-                exercicio.getDescricao()
-        );
-    }
 }
\ No newline at end of file
Index: src/main/java/API/nhyira/apivitalis/DTO/Tag/TagMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.DTO.Tag;\r\n\r\nimport API.nhyira.apivitalis.DTO.Exercicio.ExercicioExibitionDto;\r\nimport API.nhyira.apivitalis.Entity.Exercicio;\r\nimport API.nhyira.apivitalis.Entity.Tag;\r\nimport API.nhyira.apivitalis.Entity.TagExercicio;\r\n\r\npublic class TagMapper {\r\n    public static TagExibitionDto toDTO(Tag tag) {\r\n        TagExibitionDto dto = new TagExibitionDto();\r\n        dto.setIdTag(tag.getIdTag());\r\n        dto.setNome(tag.getNome());\r\n        return dto;\r\n    }\r\n\r\n    public static Tag toEntity(TagCreateEditDto tagDTO) {\r\n        Tag tag = new Tag();\r\n        tag.setNome(tagDTO.getNome());\r\n        return tag;\r\n    }\r\n\r\n    public static TagExercicioExibitionDto toDTO(TagExercicio tagExercicio) {\r\n        TagExercicioExibitionDto dto = new TagExercicioExibitionDto();\r\n        dto.setIdTagExercicio(tagExercicio.getIdTagExercicio());\r\n        dto.setTag(tagExercicio.getTag());\r\n        dto.setExercicio(exibitionDto(tagExercicio.getExercicio()));\r\n        return dto;\r\n    }\r\n\r\n    public static ExercicioExibitionDto exibitionDto(Exercicio exercicio){\r\n        if (exercicio == null)return null;\r\n        ExercicioExibitionDto exibitionDto = new ExercicioExibitionDto();\r\n        exibitionDto.setIdTreino(exercicio.getIdExercicio());\r\n        exibitionDto.setNome(exercicio.getNome());\r\n        exibitionDto.setDescricao(exercicio.getDescricao());\r\n        return exibitionDto;\r\n\r\n    }\r\n\r\n    public static TagExercicio toEntity(TagExercicioCreateEditDto tagExercicioDTO) {\r\n        TagExercicio tagExercicio = new TagExercicio();\r\n        tagExercicio.setTag(tagExercicioDTO.getTag());\r\n        tagExercicio.setExercicio(tagExercicioDTO.getExercicio());\r\n        return tagExercicio;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/DTO/Tag/TagMapper.java b/src/main/java/API/nhyira/apivitalis/DTO/Tag/TagMapper.java
--- a/src/main/java/API/nhyira/apivitalis/DTO/Tag/TagMapper.java	
+++ b/src/main/java/API/nhyira/apivitalis/DTO/Tag/TagMapper.java	
@@ -6,7 +6,7 @@
 import API.nhyira.apivitalis.Entity.TagExercicio;
 
 public class TagMapper {
-    public static TagExibitionDto toDTO(Tag tag) {
+    public TagExibitionDto toDTO(Tag tag) {
         TagExibitionDto dto = new TagExibitionDto();
         dto.setIdTag(tag.getIdTag());
         dto.setNome(tag.getNome());
@@ -19,7 +19,7 @@
         return tag;
     }
 
-    public static TagExercicioExibitionDto toDTO(TagExercicio tagExercicio) {
+    public TagExercicioExibitionDto toDTO(TagExercicio tagExercicio) {
         TagExercicioExibitionDto dto = new TagExercicioExibitionDto();
         dto.setIdTagExercicio(tagExercicio.getIdTagExercicio());
         dto.setTag(tagExercicio.getTag());
@@ -30,7 +30,7 @@
     public static ExercicioExibitionDto exibitionDto(Exercicio exercicio){
         if (exercicio == null)return null;
         ExercicioExibitionDto exibitionDto = new ExercicioExibitionDto();
-        exibitionDto.setIdTreino(exercicio.getIdExercicio());
+        exibitionDto.setIdExercicio(exercicio.getIdExercicio());
         exibitionDto.setNome(exercicio.getNome());
         exibitionDto.setDescricao(exercicio.getDescricao());
         return exibitionDto;
Index: src/main/java/API/nhyira/apivitalis/Service/CsvService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.Service;\r\n\r\nimport API.nhyira.apivitalis.Entity.Usuario;\r\nimport org.apache.commons.csv.CSVFormat;\r\nimport org.apache.commons.csv.CSVPrinter;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.util.List;\r\n\r\n\r\n@Service\r\npublic class CsvService {\r\n\r\n    @Autowired\r\n    private UsuarioService usuarioService;\r\n\r\n    public void exportUsersToCsv() throws IOException {\r\n        List<Usuario> usuarios = usuarioService.getAllUsers();\r\n\r\n        try (CSVPrinter csvPrinter = new CSVPrinter(new FileWriter(\"usuarios.csv\"), CSVFormat.DEFAULT.withDelimiter(';').withHeader(\"ID\", \"Nome\", \"Email\"))) {\r\n            for (Usuario usuario : usuarios) {\r\n                csvPrinter.printRecord(usuario.getIdUsuario(), usuario.getNome(), usuario.getEmail());\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/Service/CsvService.java b/src/main/java/API/nhyira/apivitalis/Service/CsvService.java
--- a/src/main/java/API/nhyira/apivitalis/Service/CsvService.java	
+++ b/src/main/java/API/nhyira/apivitalis/Service/CsvService.java	
@@ -8,9 +8,11 @@
 
 import java.io.FileWriter;
 import java.io.IOException;
+import java.time.LocalDate;
+import java.time.format.DateTimeFormatter;
+import java.util.Comparator;
 import java.util.List;
 
-
 @Service
 public class CsvService {
 
@@ -20,11 +22,46 @@
     public void exportUsersToCsv() throws IOException {
         List<Usuario> usuarios = usuarioService.getAllUsers();
 
-        try (CSVPrinter csvPrinter = new CSVPrinter(new FileWriter("usuarios.csv"), CSVFormat.DEFAULT.withDelimiter(';').withHeader("ID", "Nome", "Email"))) {
-            for (Usuario usuario : usuarios) {
-                csvPrinter.printRecord(usuario.getIdUsuario(), usuario.getNome(), usuario.getEmail());
+
+        usuarios.sort(Comparator.comparing(Usuario::getNome)
+                .thenComparing(Usuario::getDtNasc));
+
+        String[][] userDataMatrix = new String[usuarios.size()][5];
+
+        for (int i = 0; i < usuarios.size(); i++) {
+            Usuario usuario = usuarios.get(i);
+            userDataMatrix[i][0] = usuario.getNome();
+            userDataMatrix[i][1] = usuario.getEmail();
+            userDataMatrix[i][2] = usuario.getCpf();
+            userDataMatrix[i][3] = usuario.getDtNasc().format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));
+            userDataMatrix[i][4] = usuario.getSexo();
+        }
+
+        int[] columnWidths = calculateColumnWidths(userDataMatrix);
+
+        try (CSVPrinter csvPrinter = new CSVPrinter(new FileWriter("usuarios.csv"), CSVFormat.DEFAULT.withDelimiter(';'))) {
+            for (String[] userData : userDataMatrix) {
+                String[] formattedData = formatDataWithColumnWidths(userData, columnWidths);
+                csvPrinter.printRecord((Object[]) formattedData);
+            }
+        }
+    }
+
+    private int[] calculateColumnWidths(String[][] data) {
+        int[] columnWidths = new int[data[0].length];
+        for (String[] row : data) {
+            for (int i = 0; i < row.length; i++) {
+                columnWidths[i] = Math.max(columnWidths[i], row[i].length());
             }
         }
+        return columnWidths;
     }
 
+    private String[] formatDataWithColumnWidths(String[] data, int[] columnWidths) {
+        String[] formattedData = new String[data.length];
+        for (int i = 0; i < data.length; i++) {
+            formattedData[i] = String.format("%-" + columnWidths[i] + "s", data[i]);
+        }
+        return formattedData;
+    }
 }
Index: src/main/java/API/nhyira/apivitalis/Entity/Exercicio.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.Entity;\r\n\r\nimport jakarta.persistence.*;\r\nimport lombok.*;\r\nimport javax.validation.constraints.NotNull;\r\nimport javax.validation.constraints.Size;\r\n\r\n@Data\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\n@Getter\r\n@Setter\r\n@Entity\r\npublic class Exercicio {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    @Column(name = \"id_exercicio\")\r\n    private Integer IdExercicio;\r\n\r\n    @JoinColumn (name = \"midia_id\")\r\n    private String midiaUrl;\r\n\r\n\r\n    @Column(name = \"nome\")\r\n    private String nome;\r\n\r\n\r\n    private String descricao;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/Entity/Exercicio.java b/src/main/java/API/nhyira/apivitalis/Entity/Exercicio.java
--- a/src/main/java/API/nhyira/apivitalis/Entity/Exercicio.java	
+++ b/src/main/java/API/nhyira/apivitalis/Entity/Exercicio.java	
@@ -2,8 +2,11 @@
 
 import jakarta.persistence.*;
 import lombok.*;
+import org.w3c.dom.stylesheets.LinkStyle;
+
 import javax.validation.constraints.NotNull;
 import javax.validation.constraints.Size;
+import java.util.List;
 
 @Data
 @AllArgsConstructor
@@ -18,13 +21,16 @@
     @Column(name = "id_exercicio")
     private Integer IdExercicio;
 
+
+    @ManyToOne
     @JoinColumn (name = "midia_id")
-    private String midiaUrl;
+    private Midia midia;
 
-
-    @Column(name = "nome")
     private String nome;
 
-
     private String descricao;
+
+
+    @OneToMany(mappedBy = "exercicioId")
+    private List<Treino> treinoList;
 }
\ No newline at end of file
Index: src/main/java/API/nhyira/apivitalis/DTO/Ficha/FichaExibitionDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.DTO.Ficha;\r\n\r\nimport API.nhyira.apivitalis.DTO.Usuario.UsuarioDto;\r\nimport API.nhyira.apivitalis.Entity.Meta;\r\nimport API.nhyira.apivitalis.Entity.Usuario;\r\nimport jakarta.mail.event.MailEvent;\r\nimport lombok.Data;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\n\r\n@Data\r\npublic class FichaExibitionDto {\r\n\r\n\r\n    private Integer id;\r\n\r\n    private Integer bebe;\r\n\r\n    private Integer fuma;\r\n\r\n\r\n    private Integer problemasCardiacos;\r\n\r\n    private Integer dorPeitoAtividade;\r\n\r\n    private Integer dorPeitoUltimoMes;\r\n\r\n    private Integer perdaConsiencia;\r\n\r\n    private Integer problemaOsseoArticular;\r\n\r\n    private Integer medicamentoPressaoCoracao;\r\n\r\n    private Integer impedimentoAtividade;\r\n\r\n    private Float peso;\r\n\r\n    private float altura;\r\n\r\n    private UsuarioDto usuarioId;\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/DTO/Ficha/FichaExibitionDto.java b/src/main/java/API/nhyira/apivitalis/DTO/Ficha/FichaExibitionDto.java
--- a/src/main/java/API/nhyira/apivitalis/DTO/Ficha/FichaExibitionDto.java	
+++ b/src/main/java/API/nhyira/apivitalis/DTO/Ficha/FichaExibitionDto.java	
@@ -14,10 +14,6 @@
 
     private Integer id;
 
-    private Integer bebe;
-
-    private Integer fuma;
-
 
     private Integer problemasCardiacos;
 
@@ -25,8 +21,6 @@
 
     private Integer dorPeitoUltimoMes;
 
-    private Integer perdaConsiencia;
-
     private Integer problemaOsseoArticular;
 
     private Integer medicamentoPressaoCoracao;
Index: src/main/java/API/nhyira/apivitalis/DTO/Ficha/FichaCreateEditDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.DTO.Ficha;\r\n\r\nimport API.nhyira.apivitalis.Entity.Meta;\r\nimport jakarta.validation.constraints.DecimalMin;\r\nimport jakarta.validation.constraints.NotBlank;\r\nimport jakarta.validation.constraints.NotNull;\r\nimport jakarta.validation.constraints.Size;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\n\r\n@Getter\r\n@Setter\r\npublic class FichaCreateEditDto {\r\n\r\n    @NotNull\r\n    private Integer bebe;\r\n    @NotNull\r\n    private Integer fuma;\r\n\r\n    @NotNull\r\n    private Integer problemasCardiacos;\r\n\r\n    @NotNull\r\n    private Integer dorPeitoAtividade;\r\n\r\n    @NotNull\r\n    private Integer dorPeitoUltimoMes;\r\n\r\n    @NotNull\r\n    private Integer perdaConsiencia;\r\n\r\n    @NotNull\r\n    private Integer problemaOsseoArticular;\r\n\r\n    @NotNull\r\n    private Integer medicamentoPressaoCoracao;\r\n\r\n    @NotNull\r\n    private Integer impedimentoAtividade;\r\n\r\n    @DecimalMin(value = \"0.00\", inclusive = true, message = \"O altura deve ser um número positivo ou zero\")\r\n    private float altura;\r\n\r\n    @DecimalMin(value = \"0.00\")\r\n    private float peso;\r\n\r\n    @NotNull\r\n    private int usuarioId;\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/DTO/Ficha/FichaCreateEditDto.java b/src/main/java/API/nhyira/apivitalis/DTO/Ficha/FichaCreateEditDto.java
--- a/src/main/java/API/nhyira/apivitalis/DTO/Ficha/FichaCreateEditDto.java	
+++ b/src/main/java/API/nhyira/apivitalis/DTO/Ficha/FichaCreateEditDto.java	
@@ -12,10 +12,6 @@
 @Setter
 public class FichaCreateEditDto {
 
-    @NotNull
-    private Integer bebe;
-    @NotNull
-    private Integer fuma;
 
     @NotNull
     private Integer problemasCardiacos;
@@ -26,8 +22,6 @@
     @NotNull
     private Integer dorPeitoUltimoMes;
 
-    @NotNull
-    private Integer perdaConsiencia;
 
     @NotNull
     private Integer problemaOsseoArticular;
Index: src/main/java/API/nhyira/apivitalis/Repository/MidiaRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.Repository;\r\n\r\nimport API.nhyira.apivitalis.Entity.Midia;\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\n\r\npublic interface MidiaRepository extends JpaRepository<Midia, Integer> {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/Repository/MidiaRepository.java b/src/main/java/API/nhyira/apivitalis/Repository/MidiaRepository.java
--- a/src/main/java/API/nhyira/apivitalis/Repository/MidiaRepository.java	
+++ b/src/main/java/API/nhyira/apivitalis/Repository/MidiaRepository.java	
@@ -2,6 +2,9 @@
 
 import API.nhyira.apivitalis.Entity.Midia;
 import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
 
+
+@Repository
 public interface MidiaRepository extends JpaRepository<Midia, Integer> {
 }
Index: src/main/java/API/nhyira/apivitalis/Controller/ExercicioController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.Controller;\r\n\r\nimport API.nhyira.apivitalis.DTO.Exercicio.ExercicioCreateEditDto;\r\nimport API.nhyira.apivitalis.DTO.Exercicio.ExercicioExibitionDto;\r\nimport API.nhyira.apivitalis.Service.ExercicioService;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport org.springframework.web.multipart.MultipartFile;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/exercicios\")\r\npublic class ExercicioController {\r\n\r\n    @Autowired\r\n    private ExercicioService exercicioService;\r\n\r\n    @GetMapping\r\n    public ResponseEntity<List<ExercicioExibitionDto>> getAllExercicios() {\r\n        return ResponseEntity.ok(exercicioService.getAllExercicios());\r\n    }\r\n\r\n\r\n    @PostMapping(\"/uploadImage\")\r\n    public ResponseEntity<String> uploadImage(@RequestParam(\"file\") MultipartFile file) {\r\n        String imageUrl = exercicioService.uploadImage(file);\r\n        return ResponseEntity.ok(imageUrl);\r\n    }\r\n\r\n    @PostMapping(\"/uploadVideo\")\r\n    public ResponseEntity<String> uploadVideo(@RequestParam(\"file\") MultipartFile file) {\r\n        String videoUrl = exercicioService.uploadVideo(file);\r\n        return ResponseEntity.ok(videoUrl);\r\n    }\r\n\r\n\r\n    @GetMapping(\"/{id}\")\r\n    public ResponseEntity<ExercicioExibitionDto> getExercicioById(@PathVariable Integer id) {\r\n        return ResponseEntity.ok(exercicioService.getExercicioById(id));\r\n    }\r\n\r\n    @PostMapping\r\n    public ResponseEntity<ExercicioExibitionDto> createExercicio(@RequestBody ExercicioCreateEditDto exercicioDTO) {\r\n        return ResponseEntity.ok(exercicioService.createExercicio(exercicioDTO));\r\n    }\r\n\r\n    @PutMapping(\"/{id}\")\r\n    public ResponseEntity<ExercicioExibitionDto> updateExercicio(@PathVariable Integer id, @RequestBody ExercicioCreateEditDto exercicioDTO) {\r\n        return ResponseEntity.ok(exercicioService.updateExercicio(id, exercicioDTO));\r\n    }\r\n\r\n    @DeleteMapping(\"/{id}\")\r\n    public ResponseEntity<Void> deleteExercicio(@PathVariable Integer id) {\r\n        exercicioService.deleteExercicio(id);\r\n        return ResponseEntity.noContent().build();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/Controller/ExercicioController.java b/src/main/java/API/nhyira/apivitalis/Controller/ExercicioController.java
--- a/src/main/java/API/nhyira/apivitalis/Controller/ExercicioController.java	
+++ b/src/main/java/API/nhyira/apivitalis/Controller/ExercicioController.java	
@@ -41,19 +41,4 @@
         return ResponseEntity.ok(exercicioService.getExercicioById(id));
     }
 
-    @PostMapping
-    public ResponseEntity<ExercicioExibitionDto> createExercicio(@RequestBody ExercicioCreateEditDto exercicioDTO) {
-        return ResponseEntity.ok(exercicioService.createExercicio(exercicioDTO));
-    }
-
-    @PutMapping("/{id}")
-    public ResponseEntity<ExercicioExibitionDto> updateExercicio(@PathVariable Integer id, @RequestBody ExercicioCreateEditDto exercicioDTO) {
-        return ResponseEntity.ok(exercicioService.updateExercicio(id, exercicioDTO));
-    }
-
-    @DeleteMapping("/{id}")
-    public ResponseEntity<Void> deleteExercicio(@PathVariable Integer id) {
-        exercicioService.deleteExercicio(id);
-        return ResponseEntity.noContent().build();
-    }
 }
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\t\t xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>3.2.4</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>API.nhyira</groupId>\r\n\t<artifactId>api-vitalis</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>api-vitalis</name>\r\n\t<description>API Rest Springboot para o sistema Vitalis</description>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-mail</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-validation</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.microsoft.sqlserver</groupId>\r\n\t\t\t<artifactId>mssql-jdbc</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-security</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.security</groupId>\r\n\t\t\t<artifactId>spring-security-test</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.jsonwebtoken</groupId>\r\n\t\t\t<artifactId>jjwt-api</artifactId>\r\n\t\t\t<version>0.11.5</version>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.jsonwebtoken</groupId>\r\n\t\t\t<artifactId>jjwt-impl</artifactId>\r\n\t\t\t<version>0.11.2</version>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.jsonwebtoken</groupId>\r\n\t\t\t<artifactId>jjwt-jackson</artifactId>\r\n\t\t\t<version>0.11.1</version>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-actuator</artifactId>\r\n\t\t\t<version>3.0.5</version>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>javax.validation</groupId>\r\n\t\t\t<artifactId>validation-api</artifactId>\r\n\t\t\t<version>2.0.1.Final</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.google.maps</groupId>\r\n\t\t\t<artifactId>google-maps-services</artifactId>\r\n\t\t\t<version>0.15.0</version>\r\n\t\t</dependency>\r\n\r\n\t\t<!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springdoc</groupId>\r\n\t\t\t<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>\r\n\t\t\t<version>2.5.0</version>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.apache.commons</groupId>\r\n\t\t\t<artifactId>commons-csv</artifactId>\r\n\t\t\t<version>1.8</version>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<version>1.18.32</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>mysql</groupId>\r\n\t\t\t<artifactId>mysql-connector-java</artifactId>\r\n\t\t\t<version>8.0.23</version>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.paypal.sdk</groupId>\r\n\t\t\t<artifactId>rest-api-sdk</artifactId>\r\n\t\t\t<version>1.14.0</version>\r\n\t\t</dependency>\r\n\r\n\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.cloudinary</groupId>\r\n\t\t\t<artifactId>cloudinary-http44</artifactId>\r\n\t\t\t<version>1.28.1</version>\r\n\t\t</dependency>\r\n\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.paypal.sdk</groupId>\r\n\t\t\t<artifactId>rest-api-sdk</artifactId>\r\n\t\t\t<version>1.14.0</version> <!-- ou a versão mais recente disponível -->\r\n\t\t</dependency>\r\n\r\n\t</dependencies>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	
+++ b/pom.xml	
@@ -21,7 +21,28 @@
 			<groupId>org.springframework.boot</groupId>
 			<artifactId>spring-boot-starter-data-jpa</artifactId>
 		</dependency>
-
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-websocket</artifactId>
+		</dependency>
+
+		<dependency>
+			<groupId>org.webjars</groupId>
+			<artifactId>webjars-locator-core</artifactId>
+			<version>0.45</version>
+		</dependency>
+
+		<dependency>
+			<groupId>org.webjars</groupId>
+			<artifactId>sockjs-client</artifactId>
+			<version>1.5.1</version>
+		</dependency>
+
+		<dependency>
+			<groupId>org.webjars</groupId>
+			<artifactId>stomp-websocket</artifactId>
+			<version>2.3.3</version>
+		</dependency>
 		<dependency>
 			<groupId>org.springframework.boot</groupId>
 			<artifactId>spring-boot-starter-mail</artifactId>
@@ -114,6 +135,13 @@
 			<version>1.18.32</version>
 			<scope>provided</scope>
 		</dependency>
+
+		<!-- https://mvnrepository.com/artifact/com.mercadopago/tracking -->
+		<dependency>
+			<groupId>com.mercadopago</groupId>
+			<artifactId>sdk-java</artifactId>
+			<version>2.1.23</version>
+		</dependency>
 
 		<dependency>
 			<groupId>mysql</groupId>
@@ -121,13 +149,6 @@
 			<version>8.0.23</version>
 		</dependency>
 
-		<dependency>
-			<groupId>com.paypal.sdk</groupId>
-			<artifactId>rest-api-sdk</artifactId>
-			<version>1.14.0</version>
-		</dependency>
-
-
 
 		<dependency>
 			<groupId>com.cloudinary</groupId>
@@ -136,12 +157,26 @@
 		</dependency>
 
 
+
+
+
+
+
+
+
+		<!-- https://mvnrepository.com/artifact/org.webjars/sockjs-client -->
 		<dependency>
-			<groupId>com.paypal.sdk</groupId>
-			<artifactId>rest-api-sdk</artifactId>
-			<version>1.14.0</version> <!-- ou a versão mais recente disponível -->
+			<groupId>org.webjars</groupId>
+			<artifactId>sockjs-client</artifactId>
+			<version>1.5.1</version>
 		</dependency>
 
+
+
+
+
+
+
 	</dependencies>
 
 	<build>
Index: src/main/java/API/nhyira/apivitalis/Service/TagExercicioService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.Service;\r\n\r\nimport API.nhyira.apivitalis.DTO.Tag.TagExercicioExibitionDto;\r\nimport API.nhyira.apivitalis.Entity.TagExercicio;\r\nimport API.nhyira.apivitalis.Repository.TagExercicioRepository;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\n@Service\r\npublic class TagExercicioService {\r\n\r\n//    @Autowired\r\n//    private TagExercicioRepository tagExercicioRepository;\r\n//\r\n//    public List<TagExercicioExibitionDto> getAllTagExercicios() {\r\n//        return tagExercicioRepository.findAll().stream()\r\n//                .map(this::toDTO)\r\n//                .collect(Collectors.toList());\r\n//    }\r\n//\r\n//    public TagExercicioExibitionDto getTagExercicioById(Integer id) {\r\n//        TagExercicio tagExercicio = tagExercicioRepository.findById(id).orElseThrow();\r\n//        return toDTO(tagExercicio);\r\n//    }\r\n//\r\n//    private TagExercicioExibitionDto toDTO(TagExercicio tagExercicio) {\r\n//        return new TagExercicioExibitionDto(\r\n//                tagExercicio.getIdTagExercicio(),\r\n//                tagExercicio.getTag()\r\n//        );\r\n//    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/Service/TagExercicioService.java b/src/main/java/API/nhyira/apivitalis/Service/TagExercicioService.java
--- a/src/main/java/API/nhyira/apivitalis/Service/TagExercicioService.java	
+++ b/src/main/java/API/nhyira/apivitalis/Service/TagExercicioService.java	
@@ -1,6 +1,8 @@
 package API.nhyira.apivitalis.Service;
 
+import API.nhyira.apivitalis.DTO.Tag.TagExercicioCreateEditDto;
 import API.nhyira.apivitalis.DTO.Tag.TagExercicioExibitionDto;
+import API.nhyira.apivitalis.DTO.Tag.TagMapper;
 import API.nhyira.apivitalis.Entity.TagExercicio;
 import API.nhyira.apivitalis.Repository.TagExercicioRepository;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -12,24 +14,42 @@
 @Service
 public class TagExercicioService {
 
-//    @Autowired
-//    private TagExercicioRepository tagExercicioRepository;
-//
-//    public List<TagExercicioExibitionDto> getAllTagExercicios() {
-//        return tagExercicioRepository.findAll().stream()
-//                .map(this::toDTO)
-//                .collect(Collectors.toList());
-//    }
-//
-//    public TagExercicioExibitionDto getTagExercicioById(Integer id) {
-//        TagExercicio tagExercicio = tagExercicioRepository.findById(id).orElseThrow();
-//        return toDTO(tagExercicio);
-//    }
-//
-//    private TagExercicioExibitionDto toDTO(TagExercicio tagExercicio) {
-//        return new TagExercicioExibitionDto(
-//                tagExercicio.getIdTagExercicio(),
-//                tagExercicio.getTag()
-//        );
-//    }
+    @Autowired
+    private TagExercicioRepository tagExercicioRepository;
+
+    private TagMapper tagMapper;
+
+    public List<TagExercicioExibitionDto> getAllTagExercicios() {
+        List<TagExercicio> tagExercicios = tagExercicioRepository.findAll();
+        return tagExercicios.stream()
+                .map(tagMapper::toDTO)
+                .collect(Collectors.toList());
+    }
+
+    public TagExercicioExibitionDto getTagExercicioById(Integer id) {
+        TagExercicio tagExercicio = tagExercicioRepository.findById(id)
+                .orElseThrow(() -> new RuntimeException("TagExercicio não encontrado com o id: " + id));
+        return tagMapper.toDTO(tagExercicio);
+    }
+
+    public TagExercicioExibitionDto createTagExercicio(TagExercicioCreateEditDto tagExercicioCreateEditDTO) {
+        TagExercicio tagExercicio = tagMapper.toEntity(tagExercicioCreateEditDTO);
+        TagExercicio savedTagExercicio = tagExercicioRepository.save(tagExercicio);
+        return tagMapper.toDTO(savedTagExercicio);
+    }
+
+    public TagExercicioExibitionDto updateTagExercicio(Integer id, TagExercicioCreateEditDto tagExercicioCreateEditDTO) {
+        TagExercicio existingTagExercicio = tagExercicioRepository.findById(id)
+                .orElseThrow(() -> new RuntimeException("TagExercicio não encontrado com o id: " + id));
+        existingTagExercicio.setTag(tagExercicioCreateEditDTO.getTag());
+        existingTagExercicio.setExercicio(tagExercicioCreateEditDTO.getExercicio());
+        TagExercicio updatedTagExercicio = tagExercicioRepository.save(existingTagExercicio);
+        return tagMapper.toDTO(updatedTagExercicio);
+    }
+
+    public void deleteTagExercicio(Integer id) {
+        TagExercicio tagExercicio = tagExercicioRepository.findById(id)
+                .orElseThrow(() -> new RuntimeException("TagExercicio não encontrado com o id: " + id));
+        tagExercicioRepository.delete(tagExercicio);
+    }
 }
\ No newline at end of file
Index: src/main/java/API/nhyira/apivitalis/Service/MidiaService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.Service;\r\n\r\nimport API.nhyira.apivitalis.DTO.Midia.MidiaCreateEditDto;\r\nimport API.nhyira.apivitalis.DTO.Midia.MidiaExibitionDto;\r\nimport API.nhyira.apivitalis.DTO.Midia.MidiaMapper;\r\nimport API.nhyira.apivitalis.Entity.Midia;\r\nimport API.nhyira.apivitalis.Repository.MidiaRepository;\r\nimport com.cloudinary.Cloudinary;\r\nimport com.cloudinary.utils.ObjectUtils;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.web.multipart.MultipartFile;\r\n\r\nimport java.io.IOException;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.stream.Collectors;\r\n\r\n@Service\r\npublic class MidiaService {\r\n\r\n    @Autowired\r\n    private MidiaRepository midiaRepository;\r\n\r\n    public List<MidiaExibitionDto> getAllMidias() {\r\n        return midiaRepository.findAll().stream()\r\n                .map(MidiaMapper::toDTO)\r\n                .collect(Collectors.toList());\r\n    }\r\n\r\n    public MidiaExibitionDto getMidiaById(Integer id) {\r\n        Midia midia = midiaRepository.findById(id).orElseThrow(() -> new RuntimeException(\"Midia not found\"));\r\n        return MidiaMapper.toDTO(midia);\r\n    }\r\n\r\n    public MidiaExibitionDto createMidia(MidiaCreateEditDto midiaDTO) {\r\n        Midia midia = MidiaMapper.toEntity(midiaDTO);\r\n        midia = midiaRepository.save(midia);\r\n        return MidiaMapper.toDTO(midia);\r\n    }\r\n\r\n    public MidiaExibitionDto updateMidia(Integer id, MidiaCreateEditDto midiaDTO) {\r\n        Midia midia = midiaRepository.findById(id).orElseThrow(() -> new RuntimeException(\"Midia not found\"));\r\n        midia.setNome(midiaDTO.getNome());\r\n        midia.setCaminho(midiaDTO.getCaminho());\r\n        midia.setExtensao(midiaDTO.getExtensao());\r\n        midia = midiaRepository.save(midia);\r\n        return MidiaMapper.toDTO(midia);\r\n    }\r\n\r\n    public void deleteMidia(Integer id) {\r\n        midiaRepository.deleteById(id);\r\n    }\r\n\r\n\r\n    private Cloudinary cloudinary = new Cloudinary(ObjectUtils.asMap(\r\n            \"cloud_name\", \"dpzjmq6x5\",\r\n            \"api_key\", \"679425973318895\",\r\n            \"api_secret\", \"R-uaJBcdZUfUGu5TuYmiHodqBl4\"));\r\n\r\n    public String uploadImage(MultipartFile file) {\r\n        try {\r\n            Map uploadResult = cloudinary.uploader().upload(file.getBytes(), ObjectUtils.emptyMap());\r\n            return (String) uploadResult.get(\"urxl\");\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    public String uploadVideo(MultipartFile file) {\r\n        try {\r\n            Map uploadResult = cloudinary.uploader().upload(file.getBytes(), ObjectUtils.asMap(\"resource_type\", \"video\"));\r\n            return (String) uploadResult.get(\"url\");\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/Service/MidiaService.java b/src/main/java/API/nhyira/apivitalis/Service/MidiaService.java
--- a/src/main/java/API/nhyira/apivitalis/Service/MidiaService.java	
+++ b/src/main/java/API/nhyira/apivitalis/Service/MidiaService.java	
@@ -14,6 +14,7 @@
 import java.io.IOException;
 import java.util.List;
 import java.util.Map;
+import java.util.Optional;
 import java.util.stream.Collectors;
 
 @Service
@@ -28,30 +29,9 @@
                 .collect(Collectors.toList());
     }
 
-    public MidiaExibitionDto getMidiaById(Integer id) {
-        Midia midia = midiaRepository.findById(id).orElseThrow(() -> new RuntimeException("Midia not found"));
-        return MidiaMapper.toDTO(midia);
-    }
-
-    public MidiaExibitionDto createMidia(MidiaCreateEditDto midiaDTO) {
-        Midia midia = MidiaMapper.toEntity(midiaDTO);
-        midia = midiaRepository.save(midia);
-        return MidiaMapper.toDTO(midia);
+    public Optional<Midia> findById(Integer id) {
+        return midiaRepository.findById(id);
     }
-
-    public MidiaExibitionDto updateMidia(Integer id, MidiaCreateEditDto midiaDTO) {
-        Midia midia = midiaRepository.findById(id).orElseThrow(() -> new RuntimeException("Midia not found"));
-        midia.setNome(midiaDTO.getNome());
-        midia.setCaminho(midiaDTO.getCaminho());
-        midia.setExtensao(midiaDTO.getExtensao());
-        midia = midiaRepository.save(midia);
-        return MidiaMapper.toDTO(midia);
-    }
-
-    public void deleteMidia(Integer id) {
-        midiaRepository.deleteById(id);
-    }
-
 
     private Cloudinary cloudinary = new Cloudinary(ObjectUtils.asMap(
             "cloud_name", "dpzjmq6x5",
@@ -75,4 +55,28 @@
             throw new RuntimeException(e);
         }
     }
+
+    public MidiaExibitionDto getMidiaById(Integer id) {
+        Midia midia = midiaRepository.findById(id).orElseThrow(() -> new RuntimeException("Mídia não encontrada com o id: " + id));
+        return MidiaMapper.toDTO(midia);
+    }
+
+    public MidiaExibitionDto createMidia(MidiaCreateEditDto midiaDTO) {
+        Midia midia = MidiaMapper.toEntity(midiaDTO);
+        midia = midiaRepository.save(midia);
+        return MidiaMapper.toDTO(midia);
+    }
+
+    public MidiaExibitionDto updateMidia(Integer id, MidiaCreateEditDto midiaDTO) {
+        Midia midia = midiaRepository.findById(id).orElseThrow(() -> new RuntimeException("Mídia não encontrada com o id: " + id));
+        midia.setNome(midiaDTO.getNome());
+        midia.setCaminho(midiaDTO.getCaminho());
+        midia.setExtensao(midiaDTO.getExtensao());
+        midia = midiaRepository.save(midia);
+        return MidiaMapper.toDTO(midia);
+    }
+
+    public void deleteMidia(Integer id) {
+        midiaRepository.deleteById(id);
+    }
 }
\ No newline at end of file
Index: src/main/java/API/nhyira/apivitalis/Controller/TagExercicioController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.Controller;\r\n\r\n\r\nimport API.nhyira.apivitalis.DTO.Exercicio.TagExercicioDto;\r\nimport API.nhyira.apivitalis.DTO.Tag.TagExercicioExibitionDto;\r\nimport API.nhyira.apivitalis.Service.TagExercicioService;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/tagExercicios\")\r\npublic class TagExercicioController {\r\n\r\n    @Autowired\r\n    private TagExercicioService tagExercicioService;\r\n\r\n//    @GetMapping\r\n//    public ResponseEntity<List<TagExercicioExibitionDto>> getAllTagExercicios() {\r\n//        return ResponseEntity.ok(tagExercicioService.getAllTagExercicios());\r\n//    }\r\n//\r\n//    @GetMapping(\"/{id}\")\r\n//    public ResponseEntity<TagExercicioExibitionDto> getTagExercicioById(@PathVariable Integer id) {\r\n//        return ResponseEntity.ok(tagExercicioService.getTagExercicioById(id));\r\n//    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/Controller/TagExercicioController.java b/src/main/java/API/nhyira/apivitalis/Controller/TagExercicioController.java
--- a/src/main/java/API/nhyira/apivitalis/Controller/TagExercicioController.java	
+++ b/src/main/java/API/nhyira/apivitalis/Controller/TagExercicioController.java	
@@ -2,6 +2,7 @@
 
 
 import API.nhyira.apivitalis.DTO.Exercicio.TagExercicioDto;
+import API.nhyira.apivitalis.DTO.Tag.TagExercicioCreateEditDto;
 import API.nhyira.apivitalis.DTO.Tag.TagExercicioExibitionDto;
 import API.nhyira.apivitalis.Service.TagExercicioService;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -17,13 +18,31 @@
     @Autowired
     private TagExercicioService tagExercicioService;
 
-//    @GetMapping
-//    public ResponseEntity<List<TagExercicioExibitionDto>> getAllTagExercicios() {
-//        return ResponseEntity.ok(tagExercicioService.getAllTagExercicios());
-//    }
-//
-//    @GetMapping("/{id}")
-//    public ResponseEntity<TagExercicioExibitionDto> getTagExercicioById(@PathVariable Integer id) {
-//        return ResponseEntity.ok(tagExercicioService.getTagExercicioById(id));
-//    }
+    @GetMapping
+    public ResponseEntity<List<TagExercicioExibitionDto>> getAllTagExercicios() {
+        return ResponseEntity.ok(tagExercicioService.getAllTagExercicios());
+    }
+
+    @GetMapping("/{id}")
+    public ResponseEntity<TagExercicioExibitionDto> getTagExercicioById(@PathVariable Integer id) {
+        return ResponseEntity.ok(tagExercicioService.getTagExercicioById(id));
+    }
+
+    @PostMapping("/salvarTagExercicio")
+    public ResponseEntity<TagExercicioExibitionDto> createTagExercicio(@RequestBody TagExercicioCreateEditDto tagExercicioCreateEditDTO) {
+        TagExercicioExibitionDto createdTagExercicio = tagExercicioService.createTagExercicio(tagExercicioCreateEditDTO);
+        return ResponseEntity.status(201).body(createdTagExercicio);
+    }
+
+    @PutMapping("/{id}")
+    public ResponseEntity<TagExercicioExibitionDto> updateTagExercicio(@PathVariable Integer id, @RequestBody TagExercicioCreateEditDto tagExercicioCreateEditDTO) {
+        TagExercicioExibitionDto updatedTagExercicio = tagExercicioService.updateTagExercicio(id, tagExercicioCreateEditDTO);
+        return ResponseEntity.ok(updatedTagExercicio);
+    }
+
+    @DeleteMapping("/{id}")
+    public ResponseEntity<Void> deleteTagExercicio(@PathVariable Integer id) {
+        tagExercicioService.deleteTagExercicio(id);
+        return ResponseEntity.noContent().build();
+    }
 }
\ No newline at end of file
Index: src/main/java/API/nhyira/apivitalis/DTO/RotinaSemanal/RotinaSemanalMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.DTO.RotinaSemanal;\r\n\r\nimport API.nhyira.apivitalis.DTO.RotinaMensal.RotinaMensalExibitionDto;\r\nimport API.nhyira.apivitalis.Entity.RotinaMensal;\r\nimport API.nhyira.apivitalis.Entity.RotinaSemanal;\r\n\r\nimport java.util.List;\r\n\r\npublic class RotinaSemanalMapper {\r\n\r\n    public static RotinaSemanalExibitionDto toDto(RotinaSemanal rotinaSemanal){\r\n        if (rotinaSemanal == null)return null;\r\n        RotinaSemanalExibitionDto rotinaSemanalExibitionDto = new RotinaSemanalExibitionDto();\r\n        rotinaSemanalExibitionDto.setId(rotinaSemanal.getIdRotinaSemanal());\r\n        rotinaSemanalExibitionDto.setConcluido(rotinaSemanal.getConcluido());\r\n        rotinaSemanalExibitionDto.setRotinaMensalId(rotinaMensalDto(rotinaSemanal.getRotinaMensalId()));\r\n        return rotinaSemanalExibitionDto;\r\n    }\r\n\r\n\r\n    public static RotinaSemanalExibitionDto.RotinaMensalExibitionDto rotinaMensalDto(RotinaMensal rotinaMensal){\r\n            RotinaSemanalExibitionDto.RotinaMensalExibitionDto rotinaSemanalExibitionDto = new RotinaSemanalExibitionDto.RotinaMensalExibitionDto();\r\n            rotinaSemanalExibitionDto.setId(rotinaMensal.getIdRotinaMensal());\r\n            rotinaSemanalExibitionDto.setAno(rotinaMensal.getAno());\r\n            rotinaSemanalExibitionDto.setMes(rotinaMensal.getMes());\r\n            return rotinaSemanalExibitionDto;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/DTO/RotinaSemanal/RotinaSemanalMapper.java b/src/main/java/API/nhyira/apivitalis/DTO/RotinaSemanal/RotinaSemanalMapper.java
--- a/src/main/java/API/nhyira/apivitalis/DTO/RotinaSemanal/RotinaSemanalMapper.java	
+++ b/src/main/java/API/nhyira/apivitalis/DTO/RotinaSemanal/RotinaSemanalMapper.java	
@@ -1,6 +1,7 @@
 package API.nhyira.apivitalis.DTO.RotinaSemanal;
 
 import API.nhyira.apivitalis.DTO.RotinaMensal.RotinaMensalExibitionDto;
+import API.nhyira.apivitalis.Entity.RotinaDiaria;
 import API.nhyira.apivitalis.Entity.RotinaMensal;
 import API.nhyira.apivitalis.Entity.RotinaSemanal;
 
@@ -14,6 +15,7 @@
         rotinaSemanalExibitionDto.setId(rotinaSemanal.getIdRotinaSemanal());
         rotinaSemanalExibitionDto.setConcluido(rotinaSemanal.getConcluido());
         rotinaSemanalExibitionDto.setRotinaMensalId(rotinaMensalDto(rotinaSemanal.getRotinaMensalId()));
+        rotinaSemanalExibitionDto.setRotinaDiariaDtos(rotinaDiariaDto(rotinaSemanal.getRotinaDiariaId()));
         return rotinaSemanalExibitionDto;
     }
 
@@ -26,5 +28,14 @@
             return rotinaSemanalExibitionDto;
     }
 
+    public static List<RotinaSemanalExibitionDto.RotinaDiariaDto> rotinaDiariaDto(List<RotinaDiaria> rotinaDiarias){
+        return rotinaDiarias.stream().map(rd -> {
+            RotinaSemanalExibitionDto.RotinaDiariaDto rotinaDiariaDto = new RotinaSemanalExibitionDto.RotinaDiariaDto();
+            rotinaDiariaDto.setIdRotinaDiaria(rd.getIdRotinaDiaria());
+            rotinaDiariaDto.setConcluido(rd.getConcluido());
+            return rotinaDiariaDto;
+        }).toList();
+    }
+
 
 }
Index: src/main/java/API/nhyira/apivitalis/Controller/TagController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.Controller;\r\n\r\n\r\nimport API.nhyira.apivitalis.DTO.Tag.TagExibitionDto;\r\nimport API.nhyira.apivitalis.Service.TagService;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"tags\")\r\npublic class TagController {\r\n\r\n    @Autowired\r\n    private TagService tagService;\r\n\r\n    @GetMapping\r\n    public ResponseEntity<List<TagExibitionDto>> getAllTags() {\r\n        return ResponseEntity.ok(tagService.getAllTags());\r\n    }\r\n\r\n    @GetMapping(\"/{id}\")\r\n    public ResponseEntity<TagExibitionDto> getTagById(@PathVariable Integer id) {\r\n        return ResponseEntity.ok(tagService.getTagById(id));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/Controller/TagController.java b/src/main/java/API/nhyira/apivitalis/Controller/TagController.java
--- a/src/main/java/API/nhyira/apivitalis/Controller/TagController.java	
+++ b/src/main/java/API/nhyira/apivitalis/Controller/TagController.java	
@@ -1,6 +1,7 @@
 package API.nhyira.apivitalis.Controller;
 
 
+import API.nhyira.apivitalis.DTO.Tag.TagCreateEditDto;
 import API.nhyira.apivitalis.DTO.Tag.TagExibitionDto;
 import API.nhyira.apivitalis.Service.TagService;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -12,7 +13,6 @@
 @RestController
 @RequestMapping("tags")
 public class TagController {
-
     @Autowired
     private TagService tagService;
 
@@ -25,4 +25,11 @@
     public ResponseEntity<TagExibitionDto> getTagById(@PathVariable Integer id) {
         return ResponseEntity.ok(tagService.getTagById(id));
     }
+
+    @PutMapping("/{id}")
+    public ResponseEntity<TagExibitionDto> updateTag(@PathVariable Integer id, @RequestBody TagCreateEditDto tagCreateEditDTO) {
+        TagExibitionDto updatedTag = tagService.updateTag(id, tagCreateEditDTO);
+        return ResponseEntity.ok(updatedTag);
+    }
+
 }
\ No newline at end of file
Index: src/main/java/API/nhyira/apivitalis/DTO/RotinaSemanal/RotinaSemanalExibitionDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.DTO.RotinaSemanal;\r\n\r\n\r\nimport API.nhyira.apivitalis.DTO.RotinaMensal.RotinaMensalExibitionDto;\r\nimport API.nhyira.apivitalis.Entity.RotinaMensal;\r\nimport API.nhyira.apivitalis.Repository.RotinaMensalRepository;\r\nimport lombok.Data;\r\n\r\nimport java.util.List;\r\n\r\n@Data\r\npublic class RotinaSemanalExibitionDto {\r\n\r\n    private Integer id;\r\n    private RotinaMensalExibitionDto rotinaMensalId;\r\n    private Integer concluido;\r\n\r\n\r\n    @Data\r\n    public static class RotinaMensalExibitionDto{\r\n\r\n        private int id;\r\n\r\n        private String mes;\r\n\r\n        private int ano;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/DTO/RotinaSemanal/RotinaSemanalExibitionDto.java b/src/main/java/API/nhyira/apivitalis/DTO/RotinaSemanal/RotinaSemanalExibitionDto.java
--- a/src/main/java/API/nhyira/apivitalis/DTO/RotinaSemanal/RotinaSemanalExibitionDto.java	
+++ b/src/main/java/API/nhyira/apivitalis/DTO/RotinaSemanal/RotinaSemanalExibitionDto.java	
@@ -2,8 +2,12 @@
 
 
 import API.nhyira.apivitalis.DTO.RotinaMensal.RotinaMensalExibitionDto;
+import API.nhyira.apivitalis.Entity.RotinaDiaria;
 import API.nhyira.apivitalis.Entity.RotinaMensal;
+import API.nhyira.apivitalis.Entity.RotinaSemanal;
+import API.nhyira.apivitalis.Entity.Treino;
 import API.nhyira.apivitalis.Repository.RotinaMensalRepository;
+import jakarta.persistence.*;
 import lombok.Data;
 
 import java.util.List;
@@ -14,6 +18,7 @@
     private Integer id;
     private RotinaMensalExibitionDto rotinaMensalId;
     private Integer concluido;
+    private List<RotinaDiariaDto> rotinaDiariaDtos;
 
 
     @Data
@@ -26,4 +31,12 @@
         private int ano;
     }
 
+    @Data
+    public static class RotinaDiariaDto{
+
+        private Integer idRotinaDiaria;
+
+        private Integer concluido;
+    }
+
 }
Index: src/main/java/API/nhyira/apivitalis/Controller/MidiaController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.Controller;\r\n\r\nimport API.nhyira.apivitalis.DTO.Midia.MidiaCreateEditDto;\r\nimport API.nhyira.apivitalis.DTO.Midia.MidiaExibitionDto;\r\nimport API.nhyira.apivitalis.Service.MidiaService;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport org.springframework.web.multipart.MultipartFile;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/midias\")\r\npublic class MidiaController {\r\n\r\n    @Autowired\r\n    private MidiaService midiaService;\r\n\r\n    @GetMapping\r\n    public ResponseEntity<List<MidiaExibitionDto>> getAllMidias() {\r\n        return ResponseEntity.ok(midiaService.getAllMidias());\r\n    }\r\n\r\n    @GetMapping(\"/{id}\")\r\n    public ResponseEntity<MidiaExibitionDto> getMidiaById(@PathVariable Integer id) {\r\n        return ResponseEntity.ok(midiaService.getMidiaById(id));\r\n    }\r\n\r\n\r\n    @PutMapping(\"/{id}\")\r\n    public ResponseEntity<MidiaExibitionDto> updateMidia(@PathVariable Integer id, @RequestBody MidiaCreateEditDto midiaDTO) {\r\n        return ResponseEntity.ok(midiaService.updateMidia(id, midiaDTO));\r\n    }\r\n\r\n    @DeleteMapping(\"/{id}\")\r\n    public ResponseEntity<Void> deleteMidia(@PathVariable Integer id) {\r\n        midiaService.deleteMidia(id);\r\n        return ResponseEntity.ok().build();\r\n    }\r\n\r\n\r\n    @PostMapping(\"/uploadImage\")\r\n    public ResponseEntity<String> uploadImage(@RequestParam(\"file\") MultipartFile file) {\r\n        String imageUrl = midiaService.uploadImage(file);\r\n        return ResponseEntity.ok(imageUrl);\r\n    }\r\n\r\n    @PostMapping(\"/uploadVideo\")\r\n    public ResponseEntity<String> uploadVideo(@RequestParam(\"file\") MultipartFile file) {\r\n        String videoUrl = midiaService.uploadVideo(file);\r\n        return ResponseEntity.ok(videoUrl);\r\n    }\r\n\r\n    @PostMapping(\"/salvarMidia\")\r\n    public ResponseEntity<MidiaExibitionDto> createMidia(@RequestBody MidiaCreateEditDto midiaDTO) {\r\n        return ResponseEntity.ok(midiaService.createMidia(midiaDTO));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/Controller/MidiaController.java b/src/main/java/API/nhyira/apivitalis/Controller/MidiaController.java
--- a/src/main/java/API/nhyira/apivitalis/Controller/MidiaController.java	
+++ b/src/main/java/API/nhyira/apivitalis/Controller/MidiaController.java	
@@ -13,7 +13,6 @@
 @RestController
 @RequestMapping("/midias")
 public class MidiaController {
-
     @Autowired
     private MidiaService midiaService;
 
@@ -25,20 +24,8 @@
     @GetMapping("/{id}")
     public ResponseEntity<MidiaExibitionDto> getMidiaById(@PathVariable Integer id) {
         return ResponseEntity.ok(midiaService.getMidiaById(id));
-    }
 
-
-    @PutMapping("/{id}")
-    public ResponseEntity<MidiaExibitionDto> updateMidia(@PathVariable Integer id, @RequestBody MidiaCreateEditDto midiaDTO) {
-        return ResponseEntity.ok(midiaService.updateMidia(id, midiaDTO));
     }
-
-    @DeleteMapping("/{id}")
-    public ResponseEntity<Void> deleteMidia(@PathVariable Integer id) {
-        midiaService.deleteMidia(id);
-        return ResponseEntity.ok().build();
-    }
-
 
     @PostMapping("/uploadImage")
     public ResponseEntity<String> uploadImage(@RequestParam("file") MultipartFile file) {
@@ -56,4 +43,15 @@
     public ResponseEntity<MidiaExibitionDto> createMidia(@RequestBody MidiaCreateEditDto midiaDTO) {
         return ResponseEntity.ok(midiaService.createMidia(midiaDTO));
     }
+
+    @PutMapping("/{id}")
+    public ResponseEntity<MidiaExibitionDto> updateMidia(@PathVariable Integer id, @RequestBody MidiaCreateEditDto midiaDTO) {
+        return ResponseEntity.ok(midiaService.updateMidia(id, midiaDTO));
+    }
+
+    @DeleteMapping("/{id}")
+    public ResponseEntity<Void> deleteMidia(@PathVariable Integer id) {
+        midiaService.deleteMidia(id);
+        return ResponseEntity.ok().build();
+    }
 }
\ No newline at end of file
Index: src/main/java/API/nhyira/apivitalis/Entity/RotinaSemanal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.Entity;\r\n\r\nimport jakarta.annotation.security.DenyAll;\r\nimport jakarta.persistence.*;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\n\r\nimport java.util.List;\r\n\r\n@Setter\r\n@Getter\r\n@Entity\r\npublic class RotinaSemanal {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Integer idRotinaSemanal;\r\n\r\n    @ManyToOne\r\n    @JoinColumn(name = \"rotinaMensalId\")\r\n    private RotinaMensal rotinaMensalId;\r\n\r\n    private Integer concluido;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/Entity/RotinaSemanal.java b/src/main/java/API/nhyira/apivitalis/Entity/RotinaSemanal.java
--- a/src/main/java/API/nhyira/apivitalis/Entity/RotinaSemanal.java	
+++ b/src/main/java/API/nhyira/apivitalis/Entity/RotinaSemanal.java	
@@ -20,5 +20,8 @@
     @JoinColumn(name = "rotinaMensalId")
     private RotinaMensal rotinaMensalId;
 
+    @OneToMany(mappedBy = "rotinaSemanalId")
+    private List<RotinaDiaria> rotinaDiariaId;
+
     private Integer concluido;
 }
Index: src/main/java/API/nhyira/apivitalis/Entity/Assinatura.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.Entity;\r\n\r\n\r\nimport jakarta.persistence.*;\r\nimport lombok.*;\r\n\r\n@Data\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\n@Getter\r\n@Setter\r\n@Entity\r\npublic class Assinatura {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Integer id;\r\n\r\n    private String nome;\r\n\r\n    private Float valor;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/Entity/Assinatura.java b/src/main/java/API/nhyira/apivitalis/Entity/Assinatura.java
--- a/src/main/java/API/nhyira/apivitalis/Entity/Assinatura.java	
+++ b/src/main/java/API/nhyira/apivitalis/Entity/Assinatura.java	
@@ -1,6 +1,5 @@
 package API.nhyira.apivitalis.Entity;
 
-
 import jakarta.persistence.*;
 import lombok.*;
 
@@ -10,12 +9,17 @@
 @Getter
 @Setter
 @Entity
+@Table(name = "assinatura")
 public class Assinatura {
     @Id
     @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private Integer id;
+    @Column(name = "id_assinatura")
+    private Integer IdAssinatura;
 
+    @Column(name = "nome")
     private String nome;
 
+
+    @Column(name = "valor")
     private Float valor;
 }
Index: src/main/java/API/nhyira/apivitalis/DTO/Ficha/FichaMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.DTO.Ficha;\r\n\r\nimport API.nhyira.apivitalis.DTO.Usuario.UsuarioDto;\r\nimport API.nhyira.apivitalis.Entity.Ficha;\r\nimport API.nhyira.apivitalis.Entity.Usuario;\r\n\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\npublic class FichaMapper {\r\n\r\n    public static Ficha toEntity(FichaCreateEditDto dto){\r\n        if (dto == null)return null;\r\n\r\n        Ficha ficha = new Ficha();\r\n        ficha.setAltura(dto.getAltura());\r\n        ficha.setBebe(dto.getBebe());\r\n        ficha.setPeso(dto.getPeso());\r\n        ficha.setProblemasCardiacos(dto.getProblemasCardiacos());\r\n        ficha.setDorPeitoAtividade(dto.getDorPeitoAtividade());\r\n        ficha.setDorPeitoUltimoMes(dto.getDorPeitoUltimoMes());\r\n        ficha.setProblemasCardiacos(dto.getProblemasCardiacos());\r\n        ficha.setFuma(dto.getFuma());\r\n        ficha.setMedicamentoPressaoCoracao(dto.getMedicamentoPressaoCoracao());\r\n        ficha.setImpedimentoAtividade(dto.getImpedimentoAtividade());\r\n        ficha.setProblemaOsseoArticular(ficha.getProblemaOsseoArticular());\r\n        return ficha;\r\n    }\r\n    public static List<FichaExibitionDto> toDtoList(List<Ficha> fichas) {\r\n        return fichas.stream()\r\n                .map(FichaMapper::toDto)\r\n                .collect(Collectors.toList());\r\n    }\r\n\r\n    public static FichaExibitionDto toDto(Ficha entity){\r\n        if (entity == null)return null;\r\n\r\n        FichaExibitionDto user = new FichaExibitionDto();\r\n        user.setId(entity.getIdFicha());\r\n        user.setAltura(entity.getAltura());\r\n        user.setBebe(entity.getBebe());\r\n        user.setProblemasCardiacos(entity.getProblemasCardiacos());\r\n        user.setDorPeitoAtividade(entity.getDorPeitoAtividade());\r\n        user.setPeso(entity.getPeso());\r\n        user.setFuma(entity.getFuma());\r\n        user.setDorPeitoUltimoMes(entity.getDorPeitoUltimoMes());\r\n        user.setPerdaConsiencia(user.getPerdaConsiencia());\r\n        user.setProblemaOsseoArticular(entity.getProblemaOsseoArticular());\r\n        user.setMedicamentoPressaoCoracao(entity.getMedicamentoPressaoCoracao());\r\n        user.setImpedimentoAtividade(entity.getImpedimentoAtividade());\r\n        user.setUsuarioId(usuarioDto(entity.getUsuarioId()));\r\n        return user;\r\n    }\r\n\r\n\r\n    public static UsuarioDto usuarioDto(Usuario usuario){\r\n        if (usuario == null)return null;\r\n        UsuarioDto usuarioDto = new UsuarioDto();\r\n\r\n        usuarioDto.setCpf(usuario.getCpf());\r\n        usuarioDto.setNome(usuario.getNome());\r\n        usuarioDto.setSexo(usuario.getSexo());\r\n        usuarioDto.setEmail(usuario.getEmail());\r\n        usuarioDto.setTipo(usuario.getTipo());\r\n        usuarioDto.setNickname(usuario.getNickname());\r\n        usuarioDto.setDtNasc(usuario.getDtNasc());\r\n        usuarioDto.setIdUsuario(usuario.getIdUsuario());\r\n        return usuarioDto;\r\n    }\r\n\r\n    public static Ficha toEdit(Ficha ficha,FichaCreateEditDto dto){\r\n        if (dto == null || ficha == null)return null;\r\n\r\n        ficha.setAltura(dto.getAltura());\r\n        ficha.setBebe(dto.getBebe());\r\n        ficha.setPeso(dto.getPeso());\r\n        ficha.setProblemasCardiacos(dto.getProblemasCardiacos());\r\n        ficha.setDorPeitoAtividade(dto.getDorPeitoAtividade());\r\n        ficha.setDorPeitoUltimoMes(dto.getDorPeitoUltimoMes());\r\n        ficha.setProblemasCardiacos(dto.getProblemasCardiacos());\r\n        ficha.setFuma(dto.getFuma());\r\n        ficha.setMedicamentoPressaoCoracao(dto.getMedicamentoPressaoCoracao());\r\n        ficha.setImpedimentoAtividade(dto.getImpedimentoAtividade());\r\n        ficha.setProblemaOsseoArticular(ficha.getProblemaOsseoArticular());\r\n        return ficha;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/DTO/Ficha/FichaMapper.java b/src/main/java/API/nhyira/apivitalis/DTO/Ficha/FichaMapper.java
--- a/src/main/java/API/nhyira/apivitalis/DTO/Ficha/FichaMapper.java	
+++ b/src/main/java/API/nhyira/apivitalis/DTO/Ficha/FichaMapper.java	
@@ -14,13 +14,12 @@
 
         Ficha ficha = new Ficha();
         ficha.setAltura(dto.getAltura());
-        ficha.setBebe(dto.getBebe());
         ficha.setPeso(dto.getPeso());
         ficha.setProblemasCardiacos(dto.getProblemasCardiacos());
         ficha.setDorPeitoAtividade(dto.getDorPeitoAtividade());
         ficha.setDorPeitoUltimoMes(dto.getDorPeitoUltimoMes());
         ficha.setProblemasCardiacos(dto.getProblemasCardiacos());
-        ficha.setFuma(dto.getFuma());
+
         ficha.setMedicamentoPressaoCoracao(dto.getMedicamentoPressaoCoracao());
         ficha.setImpedimentoAtividade(dto.getImpedimentoAtividade());
         ficha.setProblemaOsseoArticular(ficha.getProblemaOsseoArticular());
@@ -38,13 +37,10 @@
         FichaExibitionDto user = new FichaExibitionDto();
         user.setId(entity.getIdFicha());
         user.setAltura(entity.getAltura());
-        user.setBebe(entity.getBebe());
         user.setProblemasCardiacos(entity.getProblemasCardiacos());
         user.setDorPeitoAtividade(entity.getDorPeitoAtividade());
         user.setPeso(entity.getPeso());
-        user.setFuma(entity.getFuma());
         user.setDorPeitoUltimoMes(entity.getDorPeitoUltimoMes());
-        user.setPerdaConsiencia(user.getPerdaConsiencia());
         user.setProblemaOsseoArticular(entity.getProblemaOsseoArticular());
         user.setMedicamentoPressaoCoracao(entity.getMedicamentoPressaoCoracao());
         user.setImpedimentoAtividade(entity.getImpedimentoAtividade());
@@ -72,13 +68,11 @@
         if (dto == null || ficha == null)return null;
 
         ficha.setAltura(dto.getAltura());
-        ficha.setBebe(dto.getBebe());
         ficha.setPeso(dto.getPeso());
         ficha.setProblemasCardiacos(dto.getProblemasCardiacos());
         ficha.setDorPeitoAtividade(dto.getDorPeitoAtividade());
         ficha.setDorPeitoUltimoMes(dto.getDorPeitoUltimoMes());
         ficha.setProblemasCardiacos(dto.getProblemasCardiacos());
-        ficha.setFuma(dto.getFuma());
         ficha.setMedicamentoPressaoCoracao(dto.getMedicamentoPressaoCoracao());
         ficha.setImpedimentoAtividade(dto.getImpedimentoAtividade());
         ficha.setProblemaOsseoArticular(ficha.getProblemaOsseoArticular());
Index: src/main/java/API/nhyira/apivitalis/Auth/Configuration/Security/AuthConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.Auth.Configuration.Security;\r\n\r\nimport API.nhyira.apivitalis.Auth.Configuration.AuthEntryPoint;\r\nimport API.nhyira.apivitalis.Auth.Usuario.AuthUsuarioService;\r\nimport API.nhyira.apivitalis.Auth.Usuario.Security.AuthUsuarioFilter;\r\nimport API.nhyira.apivitalis.Auth.Usuario.Security.AuthUsuarioProvider;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.context.annotation.Primary;\r\nimport org.springframework.http.HttpHeaders;\r\nimport org.springframework.http.HttpMethod;\r\nimport org.springframework.security.authentication.AuthenticationManager;\r\nimport org.springframework.security.config.Customizer;\r\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\r\nimport org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;\r\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\r\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\r\nimport org.springframework.security.config.annotation.web.configurers.CsrfConfigurer;\r\nimport org.springframework.security.config.annotation.web.configurers.HeadersConfigurer;\r\nimport org.springframework.security.config.http.SessionCreationPolicy;\r\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\r\nimport org.springframework.security.crypto.password.PasswordEncoder;\r\nimport org.springframework.security.web.SecurityFilterChain;\r\nimport org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\r\nimport org.springframework.security.web.util.matcher.AntPathRequestMatcher;\r\nimport org.springframework.web.cors.CorsConfiguration;\r\nimport org.springframework.web.cors.CorsConfigurationSource;\r\nimport org.springframework.web.cors.UrlBasedCorsConfigurationSource;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\n@Configuration\r\n@EnableWebSecurity\r\n@EnableMethodSecurity\r\npublic class AuthConfig {\r\n\r\n\r\n    private static final String ORIGENS_PERMITIDAS = \"*\";\r\n\r\n    // INSERIR URLS PADRÃO DE ACESSO\r\n    private static final AntPathRequestMatcher[] URLS_PERMITIDAS = {\r\n            new AntPathRequestMatcher(\"/login/**\"),\r\n            new AntPathRequestMatcher(\"/swagger-ui/**\"),\r\n            new AntPathRequestMatcher(\"/swagger-ui.html\"),\r\n            new AntPathRequestMatcher(\"/swagger-resources\"),\r\n            new AntPathRequestMatcher(\"/swagger-resources/**\"),\r\n            new AntPathRequestMatcher(\"/configuration/ui\"),\r\n            new AntPathRequestMatcher(\"/configuration/security\"),\r\n            new AntPathRequestMatcher(\"/api/public/**\"),\r\n            new AntPathRequestMatcher(\"/api/public/authenticate\"),\r\n            new AntPathRequestMatcher(\"/webjars/**\"),\r\n            new AntPathRequestMatcher(\"/v3/api-docs/**\"),\r\n            new AntPathRequestMatcher(\"/actuator/*\"),\r\n            new AntPathRequestMatcher(\"/usuarios/**\", \"GET\"),\r\n            new AntPathRequestMatcher(\"/usuarios/**\", \"DELETE\"),\r\n            new AntPathRequestMatcher(\"/usuarios/**\", \"PUT\"),\r\n            new AntPathRequestMatcher(\"/usuarios/download\", \"GET\"),\r\n            new AntPathRequestMatcher(\"/enderecos/**\"),\r\n            new AntPathRequestMatcher(\"/especialidades/**\"),\r\n            new AntPathRequestMatcher(\"/especialidadesPersonais/**\"),\r\n            new AntPathRequestMatcher(\"/cartoes/**\"),\r\n            new AntPathRequestMatcher(\"/assinaturas/**\"),\r\n            new AntPathRequestMatcher(\"/pagamentos/**\"),\r\n            new AntPathRequestMatcher(\"/rotinaTreinos/**\"),\r\n            new AntPathRequestMatcher(\"/email\", \"POST\"),\r\n            new AntPathRequestMatcher(\"/fichas/**\"),\r\n            new AntPathRequestMatcher(\"/midias/**\"),\r\n            new AntPathRequestMatcher(\"/especialidadesPorMetas/**\"),\r\n            new AntPathRequestMatcher(\"/rotinaUsuarios/**\"),\r\n            new AntPathRequestMatcher(\"/rotinaMensais/**\"),\r\n            new AntPathRequestMatcher(\"/rotinaSemanais/**\"),\r\n            new AntPathRequestMatcher(\"/metas/**\"),\r\n            new AntPathRequestMatcher(\"/dietas/**\"),\r\n            new AntPathRequestMatcher(\"/sqlserver/data/insert**\"),\r\n            new AntPathRequestMatcher(\"/usuarios\", \"POST\"),\r\n            new AntPathRequestMatcher(\"/login/usuario\", \"POST\"),\r\n\r\n            new AntPathRequestMatcher(\"/error/**\"),\r\n    };\r\n\r\n    @Autowired\r\n    private AuthUsuarioService authUsuarioService;\r\n\r\n    @Autowired\r\n    private AuthEntryPoint authEntryPoint;\r\n\r\n\r\n    @Bean\r\n    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\r\n        http\r\n                .headers(headers -> headers\r\n                        .frameOptions(HeadersConfigurer.FrameOptionsConfig::disable))\r\n                .cors(Customizer.withDefaults())\r\n                .csrf(CsrfConfigurer<HttpSecurity>::disable)\r\n                .authorizeHttpRequests(authorize -> authorize.requestMatchers(URLS_PERMITIDAS)\r\n                        .permitAll()\r\n                        .anyRequest()\r\n                        .authenticated()\r\n                )\r\n                .exceptionHandling(handling -> handling\r\n                        .authenticationEntryPoint(authEntryPoint))\r\n                .sessionManagement(management -> management\r\n                        .sessionCreationPolicy(SessionCreationPolicy.STATELESS));\r\n\r\n        http.addFilterBefore(jwtAuthenticationFilterBean(), UsernamePasswordAuthenticationFilter.class);\r\n\r\n        return http.build();\r\n    }\r\n\r\n    @Bean\r\n    public AuthenticationManager authenticationManagerForUsuarios(HttpSecurity http) throws Exception {\r\n        AuthenticationManagerBuilder authenticationManagerBuilder = http.getSharedObject(AuthenticationManagerBuilder.class);\r\n        authenticationManagerBuilder.authenticationProvider(new AuthUsuarioProvider(authUsuarioService, passwordEncoder()));\r\n        return authenticationManagerBuilder.build();\r\n    }\r\n    @Bean\r\n    public AuthEntryPoint jwtAuthenticationEntryPoint() {\r\n        return new AuthEntryPoint();\r\n    }\r\n\r\n    @Bean\r\n    public AuthUsuarioFilter jwtAuthenticationFilterBean() {\r\n        return new AuthUsuarioFilter(authUsuarioService, jwtAuthenticationUntilBean());\r\n    }\r\n\r\n    @Bean\r\n    public TokenGenJwt jwtAuthenticationUntilBean() {\r\n        return new TokenGenJwt();\r\n    }\r\n\r\n    @Bean\r\n    public PasswordEncoder passwordEncoder() {\r\n        return new BCryptPasswordEncoder();\r\n    }\r\n\r\n    @Bean\r\n    public CorsConfigurationSource corsConfigurationSource() {\r\n        CorsConfiguration corsConfiguration = new CorsConfiguration();\r\n        corsConfiguration.applyPermitDefaultValues();\r\n        corsConfiguration.setAllowedMethods(\r\n                Arrays.asList (\r\n                        HttpMethod.GET.name(),\r\n                        HttpMethod.POST.name(),\r\n                        HttpMethod.PUT.name(),\r\n                        HttpMethod.PATCH.name(),\r\n                        HttpMethod.DELETE.name(),\r\n                        HttpMethod.OPTIONS.name(),\r\n                        HttpMethod.HEAD.name(),\r\n                        HttpMethod.TRACE.name()\r\n                )\r\n        );\r\n        corsConfiguration.setExposedHeaders(List.of(HttpHeaders.CONTENT_DISPOSITION));\r\n        UrlBasedCorsConfigurationSource origem = new UrlBasedCorsConfigurationSource();\r\n        origem.registerCorsConfiguration(\"/**\", corsConfiguration);\r\n        return origem;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/Auth/Configuration/Security/AuthConfig.java b/src/main/java/API/nhyira/apivitalis/Auth/Configuration/Security/AuthConfig.java
--- a/src/main/java/API/nhyira/apivitalis/Auth/Configuration/Security/AuthConfig.java	
+++ b/src/main/java/API/nhyira/apivitalis/Auth/Configuration/Security/AuthConfig.java	
@@ -71,8 +71,13 @@
             new AntPathRequestMatcher("/rotinaUsuarios/**"),
             new AntPathRequestMatcher("/rotinaMensais/**"),
             new AntPathRequestMatcher("/rotinaSemanais/**"),
+            new AntPathRequestMatcher("/rotinaDiarias/**"),
+            new AntPathRequestMatcher("/treinos/**"),
+            new AntPathRequestMatcher("/refeicaoDiarias/**"),
+
             new AntPathRequestMatcher("/metas/**"),
             new AntPathRequestMatcher("/dietas/**"),
+            new AntPathRequestMatcher("/exercicios/**"),
             new AntPathRequestMatcher("/sqlserver/data/insert**"),
             new AntPathRequestMatcher("/usuarios", "POST"),
             new AntPathRequestMatcher("/login/usuario", "POST"),
Index: src/main/java/API/nhyira/apivitalis/DTO/Tag/TagCreateEditDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.DTO.Tag;\r\n\r\nimport jakarta.validation.constraints.NotNull;\r\nimport jakarta.validation.constraints.Size;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\n\r\n\r\n@Getter\r\n@Setter\r\npublic class TagCreateEditDto {\r\n\r\n    @NotNull\r\n    @Size(max = 100)\r\n    private String nome;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/DTO/Tag/TagCreateEditDto.java b/src/main/java/API/nhyira/apivitalis/DTO/Tag/TagCreateEditDto.java
--- a/src/main/java/API/nhyira/apivitalis/DTO/Tag/TagCreateEditDto.java	
+++ b/src/main/java/API/nhyira/apivitalis/DTO/Tag/TagCreateEditDto.java	
@@ -2,12 +2,12 @@
 
 import jakarta.validation.constraints.NotNull;
 import jakarta.validation.constraints.Size;
+import lombok.Data;
 import lombok.Getter;
 import lombok.Setter;
 
 
-@Getter
-@Setter
+@Data
 public class TagCreateEditDto {
 
     @NotNull
Index: src/main/java/API/nhyira/apivitalis/DTO/Assinatura/AssinaturaMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.DTO.Assinatura;\r\n\r\nimport API.nhyira.apivitalis.DTO.Assinatura.AssinaturaExibitionDto;\r\nimport API.nhyira.apivitalis.DTO.Assinatura.AssinaturaCreateEditDto;\r\nimport API.nhyira.apivitalis.Entity.Assinatura;\r\nimport org.springframework.stereotype.Component;\r\n\r\n@Component\r\npublic class AssinaturaMapper {\r\n\r\n    public AssinaturaExibitionDto toExibitionDto(Assinatura assinatura) {\r\n        AssinaturaExibitionDto dto = new AssinaturaExibitionDto();\r\n        dto.setId(assinatura.getId());\r\n        dto.setNome(assinatura.getNome());\r\n        dto.setValor(assinatura.getValor().doubleValue());\r\n        return dto;\r\n    }\r\n\r\n    public Assinatura toEntity(AssinaturaCreateEditDto dto) {\r\n        Assinatura assinatura = new Assinatura();\r\n        assinatura.setNome(dto.getNome());\r\n        assinatura.setValor(dto.getValor().floatValue());\r\n        return assinatura;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/DTO/Assinatura/AssinaturaMapper.java b/src/main/java/API/nhyira/apivitalis/DTO/Assinatura/AssinaturaMapper.java
--- a/src/main/java/API/nhyira/apivitalis/DTO/Assinatura/AssinaturaMapper.java	
+++ b/src/main/java/API/nhyira/apivitalis/DTO/Assinatura/AssinaturaMapper.java	
@@ -10,7 +10,7 @@
 
     public AssinaturaExibitionDto toExibitionDto(Assinatura assinatura) {
         AssinaturaExibitionDto dto = new AssinaturaExibitionDto();
-        dto.setId(assinatura.getId());
+        dto.setId(assinatura.getIdAssinatura());
         dto.setNome(assinatura.getNome());
         dto.setValor(assinatura.getValor().doubleValue());
         return dto;
Index: src/main/java/API/nhyira/apivitalis/Entity/Ficha.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API.nhyira.apivitalis.Entity;\r\n\r\nimport jakarta.persistence.*;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\n\r\n@Getter\r\n@Setter\r\n@Entity\r\npublic class Ficha {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Integer idFicha;\r\n\r\n    private Integer bebe;\r\n\r\n    private Integer fuma;\r\n\r\n    private Integer problemasCardiacos;\r\n\r\n    private Integer dorPeitoAtividade;\r\n\r\n    private Integer dorPeitoUltimoMes;\r\n\r\n    private Integer perdaConsiencia;\r\n\r\n    private Integer problemaOsseoArticular;\r\n\r\n    private Integer medicamentoPressaoCoracao;\r\n\r\n    private Integer impedimentoAtividade;\r\n\r\n    private Float peso;\r\n\r\n    private float altura;\r\n\r\n    @ManyToOne\r\n    @JoinColumn(name = \"usuarioId\")\r\n    private Usuario usuarioId;\r\n\r\n    @ManyToOne\r\n    @JoinColumn(name = \"metaId\")\r\n    private Meta metaId;\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/API/nhyira/apivitalis/Entity/Ficha.java b/src/main/java/API/nhyira/apivitalis/Entity/Ficha.java
--- a/src/main/java/API/nhyira/apivitalis/Entity/Ficha.java	
+++ b/src/main/java/API/nhyira/apivitalis/Entity/Ficha.java	
@@ -13,18 +13,12 @@
     @GeneratedValue(strategy = GenerationType.IDENTITY)
     private Integer idFicha;
 
-    private Integer bebe;
-
-    private Integer fuma;
-
     private Integer problemasCardiacos;
 
     private Integer dorPeitoAtividade;
 
     private Integer dorPeitoUltimoMes;
 
-    private Integer perdaConsiencia;
-
     private Integer problemaOsseoArticular;
 
     private Integer medicamentoPressaoCoracao;
@@ -39,8 +33,4 @@
     @JoinColumn(name = "usuarioId")
     private Usuario usuarioId;
 
-    @ManyToOne
-    @JoinColumn(name = "metaId")
-    private Meta metaId;
-
 }
